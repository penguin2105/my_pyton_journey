
import speech_recognition as sr
import pyttsx3
import datetime
import webbrowser
import os
import random
import requests
import json

class VoiceAssistant:
    def __init__(self):
       
        self.recongizer=sr.Recognizer()
        self.Microphone=sr.Microphone()
        self.engine = pyttsx3.init()
        # —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—å –≥–æ–ª–æ—Å–∞18-20
        voise=self.engine.getProperty('voices')
        self.engine.setProperty('voice', [1].id)# 0 -–≥–û–õ–û–° –ú–£–ñ–ß–ò–ù–´ 1 –ì–û–õ–û–° –î–ï–í–£–®–ö–ò
        self.engine.setProperty( 'rate', 150) # —Å–∫–æ—Ä–æ—Å—Ç—å –≥–æ–ª–æ—Å–∞
        
        self.name="–ú–∞—É–≤–∏–∫–∞" 
       
        self.comands={
            "–ü—Ä–∏–≤–µ—Ç —è –ú–∞—É–≤–∏–∫–∞ ":self.greet,
            "–≤—Ä–µ–º—è": self.tell_time,
            "–¥–∞—Ç–∞": self.tell_date,
            "–ø–æ–∏—Å–∫": self.search_web,
            "–æ—Ç–∫—Ä–æ–π": self.open_website,
            "–ø–æ–≥–æ–¥–∞": self.get_weather,
            "—Ä–∞—Å—Å–∫–∞–∂–∏ —à—É—Ç–∫—É": self.tell_joke,
            "—Å—Ç–æ–ø": self.stop,
        }
        print(f"{self.name} –∏–Ω—Ç–∏–∞–ª–∏–∑–∞—Ü–∏—è!")

    def speak(self, text):
        """–ü—Ä–æ–∏–∑–Ω–µ—Å–∏ —Ç–µ–∫—Å—Ç""" 
        print(f"ü§ñ {self.name}:{text}")
        self.engine.say(text)
        self.engine.runAndWait()

    def listen(self):
        """–°–ª—É—à–∞—Ç—å –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å —Ä–µ—á—å"""
        try:
            with self.microphone as source:
                print("üé§ –°–ª—É—à–∞—é...–ú–æ–π –≥–æ—Å–ø–æ–¥–∏–Ω")
                # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —Ñ–æ–Ω–æ–≤–æ–≥–æ —à—É–º–∞
                self.recognizer.adjust_for_ambient_noise(source, duration=0.5)
                # –°–ª—É—à–∞–µ–º —Å —Ç–∞–π–º–∞—É—Ç–æ–º
                audio = self.recognizer.listen(source, timeout=5, phrase_time_limit=5)
            
            # –†–∞—Å–ø–æ–∑–Ω–∞–µ–º —Ä–µ—á—å
            text = self.recognizer.recognize_google(audio, language="ru-RU").lower()
            print(f"üë§ –í—ã —Å–∫–∞–∑–∞–ª–∏: {text}")
            return text
            
        except sr.UnknownValueError:
            self.speak("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —Ä–∞—Å—Å–ª—ã—à–∞–ª–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.")
            return ""
        except sr.RequestError:
            self.speak("–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.")
            return ""
        except sr.WaitTimeoutError:
            return ""
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è: {e}")
            return ""
    def greet(self):
        """–ü—Ä–∏–≤–µ—Å—Ç–≤–∏–µ"""
        greetings=[
            f"–ü—Ä–∏–≤–µ—Ç –º–æ–π —Ö–æ–∑—è–∏–Ω ! –Ø –¢–≤–æ—è {self.name},—è —Ç–≤–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫!",
            f"–ü—Ä–∏–≤–µ—Ç ! –Ø –≥–µ—Ä–æ–π —Å –ü–ö –∏–≥—Ä—ã Genshin Inpact  {self.name},—è —Ç–≤–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫!",
            f"–ü—Ä–∏–≤–µ—Ç  ! –Ø –¢–≤–æ—è {self.name},—è –ø–æ–º–æ–≥–ª–∞ –ò—Ç–µ–Ω—É –≥–æ—Ç–æ–≤–∞ —Å–ª—É–∂–∏—Ç—å —Ç–µ–±–µ!"

        ]
        self.speak(random.cholse(greetings))

    def tell_time(self):
        """–°–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è"""    
        now=datetime.datetime.now()
        time_str=now.strftime("%H:%M")
        self.speak=(f"C–µ–π—á–∞—Å{time_str}")
    def tell_data(self):
        """–°–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É"""
        now=datetime.datetime.now()
        days=[ '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫','–í—Ç–æ—Ä–Ω–∏–∫','–°—Ä–µ–¥–∞ ','–ß–µ—Ç–≤–µ—Ä–≥','–ü—è—Ç–Ω–∏—Ü–≤','–°—É–±–±–æ—Ç–∞','–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ']
        months=["—è–Ω–≤–∞—Ä—è", "—Ñ–µ–≤—Ä–∞–ª—è", "–º–∞—Ä—Ç–∞", "–∞–ø—Ä–µ–ª—è", "–º–∞—è", "–∏—é–Ω—è", "–∏—é–ª—è", "–∞–≤–≥—É—Å—Ç–∞", "—Å–µ–Ω—Ç—è–±—Ä—è", "–æ–∫—Ç—è–±—Ä—è", "–Ω–æ—è–±—Ä—è", "–¥–µ–∫–∞–±—Ä—è"]
    
    

    
    
    
   
    
    
    
    
    
  
